(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["app"] = factory();
	else
		root["app"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	CodeMirror.defineOption('jsonlint', true, function (editor) {
		var validateBtn = document.createElement('span');
		validateBtn.innerHTML = 'Validate';
		validateBtn.className = 'lint-button';
		validateBtn.style.position = 'absolute';
		validateBtn.style.zIndex = 44040400;
		validateBtn.style.top = validateBtn.style.right = 0;
	
		validateBtn.addEventListener('click', function (evt) {
			alert();
		});
	
		editor.display.wrapper.appendChild(validateBtn);
	
		editor.notify('babulia');
	
		console.log(editor.display.wrapper);
	});
	
	CodeMirror.defineExtension('validate', function () {
		var code = this.getValue(),
		    lineMatches = undefined;
	
		//this.comb(code);
		//code = this.code;
	
		try {
			JSON.parse(code);
			this.notify('success', 'Valid JSON');
		} catch (_e) {
			try {
				jsonlint.parse(code);
				this.notify('success', 'Valid JSON');
			} catch (e) {
				// retrieve line number from error
				lineMatches = e.message.match(/line ([0-9]*)/);
	
				if (lineMatches && lineMatches.length > 1) {
					this.highlightErrorLine(+lineMatches[1] - 1);
				}
	
				this.notify('error', e);
			}
		}
	
		//alert('validata pizdata');
	});
	
	CodeMirror.defineExtension('notify', function (state, message) {
		var wrapper = this.display.wrapper,
		    notifierBlock = $.one('.notify-block', wrapper) || wrapper.appendChild($.create('div', {
			className: 'notify-block'
		}));
	
		notifierBlock.dataset.state = state ? state : '';
	
		notifierBlock.innerHTML = message || state;
		console.log(state, message);
	
		//this.display.wrapper.appendChild(notifierBlock);
	
		// null, error, warning, success
	});

/***/ }
/******/ ])
});
;
//# sourceMappingURL=app.js.map